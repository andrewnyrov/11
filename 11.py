"""# Таблица умножения
for i in range(1, 11, 2):   # i - 1
    for j in range(1, 11):   # j - 1, 2, 3, 4...
        print(f'{i} x {j} = {i * j}')
"""
"""
dict_ = {'a': 1, 'b': 2, 'c': 3}
for i in dict_:
    print(i, dict_[i])
"""
"""
Задача "Всё не так уж просто":
Дан список чисел  numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
Испольуя этот список составьте второй список primes содержащий только простые числа.
А так же третий список not_primes, содержащий все не простые числа.
Выведите списки primes и not_primes на экран(в консоль).

Пункты задачи:
Создайте пустые списки primes и not_primes.
При помощи цикла for переберите список numbers.
Напишите ещё один цикл for (вложенный), где будут подбираться делители для числа из 1ого цикла.
Отметить простоту числа можно переменной is_prime, записав в неё занчение True перед проверкой.
В процессе проверки на простоту записывайте числа из списка numbers в списки primes и not_primes в зависимости от значения перменной is_prime после проверки (True - в prime, False - в not_prime).
Выведите списки primes и not_primes на экран (в консоль).

"""
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
n = len(numbers)
print(n)
is_prime = []
not_prime = []
kol = 0  # в k будем хранить количество делителей
# пробегаем все числа от 2 до N
for i in range(2, n + 1):  # пробегаем все числа от 2 до текущего
    for j in range(2, i):  # ищем количество делителей
        if i % j == 0:  # ищем количество делителей
           kol = kol + 1
    if kol == 0:  # если делителей нет, добавляем число в список
        is_prime.append(i)
    else:
        kol = 0
        not_prime.append(i)
print('Primes: ', is_prime)
print('Not Primes: ', not_prime)